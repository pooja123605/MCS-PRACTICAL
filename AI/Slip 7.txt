Write a Program to check whether the given no is palindrome or not.
     
n=int(input("Enter number:"))
temp=n
rev=0
while(n>0):
    dig=n%10
    rev=rev*10+dig
    n=n//10
if(temp==rev):
    print("The number is a palindrome!")
else:
    print("The number isn't a palindrome!")

Output:
Enter number:121
The number is a palindrome!

2)Program to Implement K nearest Neigbor algorithm
Solution-ïƒ 
importunicodecsv
importrandom
importoperator
importmath
#getdata() function definition
defgetdata(filename):
 withopen(filename,'rb') as f:
 reader=unicodecsv.reader(f)
 returnlist(reader)
#random train test data split function definition
defshuffle(i_data):
 random.shuffle(i_data)
 train_data=i_data[:int(0.7*30)]
 test_data=i_data[int(0.7*30):]
 returntrain_data,test_data
defeuclideanDist(x,xi):
 d=0.0
 fori in range(len(x)-1):
 d+=pow((float(x[i])-float(xi[i])),2) #euclidean distance
 d=math.sqrt(d)
 returnd
#KNN prediction and model training
defknn_predict(test_data,train_data,k_value):
 fori in test_data:
 eu_Distance=[]
 knn=[]
 good=0
bad=0
 forj in train_data:
 eu_dist=euclideanDist(i,j)
 eu_Distance.append((j[5],eu_dist))
 eu_Distance.sort(key=operator.itemgetter(1))
 knn=eu_Distance[:k_value]
 fork in knn:
 ifk[0]=='g':
 good+=1
 else:
 bad+=1
 ifgood>bad:
 i.append('g')
 elifgood<bad:
 i.append('b')
 else:
 i.append('NaN')
#Accuracy calculation function
defaccuracy(test_data):
 correct=0
 fori in test_data:
 ifi[5]==i[6]:
 correct+=1
 accuracy=float(correct)/len(test_data)*100 #accuracy 
 returnaccuracy
dataset=getdata('i_data_sample_30.csv') #getdata function call with csv file as 
parameter
train_dataset,test_dataset=shuffle(dataset)#train test data split
K=5 # Assumed K value
knn_predict(test_dataset,train_dataset,K) 
printtest_dataset
print"Accuracy : ",accuracy(test_dataset)
